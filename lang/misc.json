{
    "en_US": {
        "#0": "Single lang strings",
        "geck_out": "arbor!",
        "mud_out": "Kip!",
        "mudkip_out": "https://www.youtube.com/watch?v=3DkqMjfqqPc",
        "tree_out": "cko!",

        "#1": "Stuff",
        "geck_error": "An error occured during `!geck` command. Does the file {} exist?",
        "choose_sabaton": "SABATON! SABATON! Sabaton is always the best choice, but...",
        "choose_msg": "I pick: ",
        "choose_noarg": "I need an option!",
        "choose_falsecount": "False count! One to number of options, nothing else!",
        "bully_msg": "{} is bulling us :frowning:",
        "bully_msg_self": "I bully you :slight_smile:",
        "money_converted": "**{} {}** are the equivalent of **{} {}**",
        "money_error": "Whoops! No money?!",
        "alpha_response": "beep boop :robot: The result is: {}",
        "week_number": "Week {}",
        "stopwatch_started": "Stopwatch started, type `!stopwatch` again to stop the timer and get your result!",
        "stopwatch_units": "days|hours|minutes|seconds",
        "pizza_argsdim": "I am missing the price of the pizza with diameter {}.",
        "pizza_nan": "{} ist not a number.",
        "pizza_single_result": "The pizza costs {} {}.",
        "pizza_a": "per area",
        "pizza_a_unit": "per {}",
        "pizza_header_d": "Diameter",
        "pizza_header_price": "Price",
        "pizza_header_rel": "Rel. price",
        "hash_alg_not_found": "Unknown hash algorithm: `{}`",
        "hash_empty_string": "Hash of the empty string:\n",

        "#2": "Help",
        "help_alpha": "Asks Wolfram|Alpha a question",
        "desc_alpha": "Gives short textual answers for a query from Wolfram|Alpha's Short Answers API",
        "help_dice": "Rolls a dice",
        "desc_dice": "Alea iacta est! Simulates one or more dices.",
        "usage_dice": "[Number of sites] [Number of dices]",
        "help_choose": "Picks on of the options",
        "desc_choose": "Picks on of the options. Separate options with '|'",
        "usage_choose": "Option 1 | Option 2 | ...",
        "help_kw": "Shows the week number to a date.",
        "help_multichoose": "Like !choose but chooses multiple options.",
        "desc_multichoose": "Randomly draws from specified options. Options are to be separated by |",
        "usage_multichoose": "<Amount of draws> option1 | option2 | ...",
        "help_shuffle": "Shuffles a list of options.",
        "desc_shuffle": "Randomly shuffles the specified options. Options are to be separated by |.",
        "usage_shuffle": "option1 | option2 | ...",
        "help_geck": "Arbor!",
        "help_mud": "Kip!",
        "help_mudkip": "Mudkip!",
        "desc_mudkip": "Wheres the '!mud' comes from.",
        "help_mimimi": "For special mimimi moments",
        "desc_mimimi": "Provides an .mp3 file that plays the sound of 'mimimi'.",
        "desc_keysmash": "Protects the keyboard.",
        "help_stopwatch": "Starts/Stops a stopwatch.",
        "help_werwars": "Accuses a user",
        "desc_werwars": "Searches a user which writed something in the last 30 min and accuses him. Supports passive ignoring.",
        "help_money": "Exchanges money!",
        "usage_money": "<currency> [other_currency] [amount]",
        "help_pizza": "Calculates the relative price of pizza",
        "desc_pizza": "Calculates the price per area of one or several pizzas.",
        "usage_pizza": "Diameter1 Price1 [Diameter2 Price2 ...]",
        "help_timestamp": "Create timestamp strings",
        "desc_timestamp": "Converts the given date and time to a Discord unix timestamp string.\n\nThe given date and time can be relative to current time or a fix given date and time. If no date or time is given, the current time or date will be used. If the date or time would be in the past, the next day/month/year will be used instead.\n\nStyles can be given as long string or single char out of following possible values:\nd: DATE_SHORT     → 20/04/2021\nD: DATE_LONG      → 20 April 2021\nf: DATETIME_SHORT → 20 April 2021 16:20\nF: DATETIME_LONG  → Tuesday, 20 April 2021 16:20\nR: RELATIVE       → 2 months ago\nt: TIME_SHORT     → 16:20\nT: TIME_LONG      → 16:20:30",
        "usage_timestamp": "<#|#m|#h|#d|DD.MM.YYYY|DD.MM.YY|DD.MM.|HH:MM|DD.MM.YYYY HH:MM|DD.MM.YY HH:MM|DD.MM. HH:MM> [style]",
        "help_hash": "Calculates hashes",
        "desc_hash": "Calculates a cryptographic hash of a string. The algorithm argument specifies the used hash algorithm, e.g. md5 or sha256.\n\nExample:\n  !hash sha256 lorem ipsum",
        "usage_hash": "<algorithm> <string>"
    },
    "de_DE": {
        "#0": "Single lang strings",
        "geck_out": "arbor!",
        "mud_out": "Kip!",
        "mudkip_out": "https://www.youtube.com/watch?v=3DkqMjfqqPc",
        "tree_out": "cko!",

        "#1": "Stuff",
        "geck_error": "Beim Kommando `!geck` lief was schief. Gibt es die Datei {}?",
        "choose_sabaton": "NOCH EIN BIER! NOCH EIN BIER! Also Sabaton geht ja immer, aber...",
        "choose_msg": "Ich wähle: ",
        "choose_noarg": "Ich brauche mindestens eine Möglichkeit!",
        "choose_falsecount": "Mindestens eine, maximal so viele wie valide Optionen. Logisch, oder?",
        "bully_msg": "{} mobbt uns :frowning:",
        "bully_msg_self": "Ich mobbe euch :slight_smile:",
        "money_converted": "**{} {}** entsprechen aktuell **{} {}**",
        "money_error": "Bin ich pleite?! Irgendwas stimmt hier nicht!",
        "alpha_response": "beep boop :robot: Das Resultat ist: {}",
        "week_number": "Kalenderwoche {}",
        "stopwatch_started": "Stoppuhr gestartet. Nutze `!stoppuhr` erneut um dein Ergebnis zu erhalten!",
        "stopwatch_units": "Tag(e)|Stunde(n)|Minute(n)|Sekunden",
        "pizza_argsdim": "Mir fehlt der Preis der Pizza mit dem Durchmesser {}.",
        "pizza_nan": "{} ist keine Zahl.",
        "pizza_single_result": "Die Pizza kostet {} {}.",
        "pizza_a": "pro Fläche",
        "pizza_a_unit": "pro {}",
        "pizza_header_d": "Durchmesser",
        "pizza_header_price": "Preis",
        "pizza_header_rel": "rel. Preis",
        "hash_alg_not_found": "Unbekannter Hash-Algorithmus: `{}`",
        "hash_empty_string": "Hash des leeren Strings:\n",

        "#2": "Help",
        "help_alpha": "Fragt Wolfram|Alpha etwas",
        "desc_alpha": "Gibt kurze Antworten mithilfe der Wolfram|Alpha Short Answers API (www.wolframalpha.com). Eingabe in englischer Sprache.",
        "help_dice": "Wirft einen Würfel",
        "desc_dice": "Alea iacta est! Simuliert den Wurf einer oder mehrerer Würfel.",
        "usage_dice": "[Anzahl Seiten] [Anzahl Würfel]",
        "help_choose": "Zieht zufällig aus gegebenen Optionen.",
        "desc_choose": "Zieht zufällig aus anzugebenden Optionen. Optionen sind mit | zu trennen.",
        "usage_choose": "option1 | option2 | ...",
        "help_kw": "Gibt die Kalenderwoche aus.",
        "help_multichoose": "Wie !choose, aber wählt mehrere aus.",
        "desc_multichoose": "Zieht zufällig aus anzugebenden Optionen. Optionen sind mit | zu trennen.",
        "usage_multichoose": "<Anzahl Ausgaben> option1 | option2 | ...",
        "help_shuffle": "Mischt eine Liste von Argumenten.",
        "desc_shuffle": "Mischt zufällig die angegebenen Optionen. Optionen sind mit | zu trennen.",
        "usage_shuffle": "option1 | option2 | ...",
        "help_geck": "Arbor!",
        "help_mud": "Kip!",
        "help_mudkip": "Hydropi!",
        "desc_mudkip": "Erklärt die Herkunft von '!mud'.",
        "help_mimimi": "Für besondere Mimimi-Momente",
        "desc_mimimi": "Postet eine mp3-Datei, die \"Mimimi\" enthält.",
        "desc_keysmash": "Schont die Tastatur.",
        "help_stopwatch": "Startet/Stoppt eine Stoppuhr.",
        "help_werwars": "Zeigt anklagend auf einen User",
        "desc_werwars": "Sucht einen User, der in den letzten 30 Minuten aktiv war und zeigt anklagend auf diesen. Unterstützt die Ignore-Funktion.",
        "help_money": "Wechselt Geld um!",
        "usage_money": "<Währung> [andere Währung] [Geldmenge]",
        "help_pizza": "Berechnet das Preisverhältnis von Pizza",
        "desc_pizza": "Berechnet den Preis pro Pizzafläche von einer oder mehreren Pizzen.",
        "usage_pizza": "Durchmesser1 Preis1 [Durchmesser2 Preis2 ...]",
        "help_timestamp": "Erstellt einen Timestamp-String",
        "desc_timestamp": "Konvertiert das angegebene Datum und Zeit in einen Unix-Timestamp-String zur Verwendung in Discord.\n\nDas angegebene Datum oder Zeit kann relativ zur aktuellen Zeit oder mit einem fest angegebenen Datum und Zeit angegeben werden. Wenn kein Datum oder keine Zeit angegeben ist, wird die jeweils aktuelle Zeit oder Datum verwendet. Wenn der Zeitpunkt in der Vergangenheit liegen würde, wird stattdessen der jeweils nächste Tag/Monat/Jahr verwendet.\n\nDer Style kann als einzelnes Zeichen oder voller String basierend auf folgenden Styles verwendet werden:\nd: DATE_SHORT     → 20.04.2021\nD: DATE_LONG      → 20. April 2021\nf: DATETIME_SHORT → 20. April 2021 16:20\nF: DATETIME_LONG  → Dienstag, 20. April 2021 16:20\nR: RELATIVE       → vor 2 Monaten\nt: TIME_SHORT     → 16:20\nT: TIME_LONG      → 16:20:30",
        "usage_timestamp": "<#|#m|#h|#d|DD.MM.YYYY|DD.MM.YY|DD.MM.|HH:MM|DD.MM.YYYY HH:MM|DD.MM.YY HH:MM|DD.MM. HH:MM> [Style]",
        "help_hash": "Berechnet einen Hash",
        "desc_hash": "Berechnet einen kryptographischen Hash eines Strings. Das Algorithmus-Argument spezifiziert den genutzten Hashalgorithmus, etwa md5 oder sha256.\n\nBeispiel:\n  !hash sha256 lorem ipsum",
        "usage_hash": "<Algorithmus> <String>"
    }
}
